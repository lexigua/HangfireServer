<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log">

  <!-- optional, add some variables
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!--
  See https://github.com/nlog/nlog/wiki/Configuration-file
  for information on customizing logging rules and outputs.
   -->
  <targets>
    <!--添加一个新条目让日志输出到控制台中，并添加必要的输出布局（layout）-->
    <!--说明 xsi:type="Console"指定输出到控制台；layout指定输出文件内容的样式 ${longdate}是日期（具体到毫秒），${level}是日志的等级；${message}是具体要输出的内容。-->
    <target name="Debug" xsi:type="File" fileName="c:/BTServerLog/跟踪[Debug]/${shortdate}.log" layout="${longdate} [${level}]： ${message}"/>
    <target name="Trace" xsi:type="File" fileName="c:/BTServerLog/跟踪[调用]/${shortdate}.log" layout="${longdate} [${level}]： ${message}"/>
    <target name="Info" xsi:type="File" fileName="c:/BTServerLog/跟踪[SQL]/${date:format=yyyy-MM-dd HH}.log" layout="${longdate} [${level}]： ${message}"/>
    <target name="Error" xsi:type="File" fileName="c:/BTServerLog/跟踪[异常]/${shortdate}.log" layout="${longdate} [${level}]： ${message}"/>
    <target xsi:type="NLogViewer"
				  name="viewer57"
				  address="udp://192.168.110.57:9999"/>
    <target xsi:type="NLogViewer"
				  name="viewer51"
				  address="udp://192.168.110.51:9999"/>
    <target xsi:type="NLogViewer"
				  name="viewer64"
				  address="udp://192.168.110.64:9999"/>
    <target xsi:type="NLogViewer"
				  name="viewer198"
				  address="udp://192.168.110.198:9999"/>
    <target xsi:type="NLogViewer"
				  name="viewer234"
				  address="udp://192.168.110.234:9999"/>

    <!--将传输日志写入到数据库中，并添加必要的输出布局（layout）-->
    <target xsi:type="Database" name="database"
				connectionStringName ="AkData.Writer"
				commandText="insert into e_sys_TranceLog(
         FAddTime
        ,FOrigin
        ,FLogLevel
        ,FMessage
        ,FException
        ,FStackTrace)
        values (getdate(), @origin, @logLevel, @message,@exception, @stackTrace)">
      <!--<commandText>
        "insert into e_sys_TranceLog(
        FLoanID
        ,FBillTypeID
        ,FAddTime
        ,FOrigin
        ,FLogLevel
        ,FMessage
        ,FException
        ,FStackTrace)
        values (@loanid,@billTypeid,getdate(), @origin, @logLevel, @message,@exception, @stackTrace)";
      </commandText>-->
      <!--日志来源-->
      <parameter name="@origin" layout="${callsite}"/>
      <!--日志等级-->
      <parameter name="@logLevel" layout="${level}"/>
      <!--日志消息-->
      <parameter name="@message" layout="${message}"/>
      <!--异常信息-->
      <parameter name="@exception" layout="${exception}" />
      <!--堆栈信息-->
      <parameter name="@stackTrace" layout="${stacktrace}"/>
    </target>
  </targets>

  <rules>
    <!--添加必要的规则-->
    <logger name="*" minlevel="Debug" maxlevel="Debug"  writeTo="Debug"/>
    <logger name="*" minlevel="Trace" maxlevel="Trace"  writeTo="Trace"/>
    <logger name="*" minlevel="Info" maxlevel="Info"  writeTo="Info"/>
    <logger name="*" minlevel="Warn"  writeTo="Error"/>
    <logger name="*" levels="Debug,Trace,Fatal"  writeTo="viewer57" />
    <logger name="*" levels="Debug,Trace,Fatal" writeTo="viewer51" />
    <logger name="*" levels="Debug,Trace,Fatal" writeTo="viewer64" />
    <logger name="*" levels="Debug,Trace,Fatal" writeTo="viewer198" />
    <logger name="*" levels="Debug,Trace,Fatal"  writeTo="viewer234" />

    <!--我个人设置的规则是，将所有记录的信息输出至控制台-->
    <logger name="*" writeTo="database"/>
  </rules>
</nlog>
